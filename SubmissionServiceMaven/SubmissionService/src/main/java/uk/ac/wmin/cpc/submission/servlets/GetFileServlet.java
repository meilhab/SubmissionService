package uk.ac.wmin.cpc.submission.servlets;

import java.io.BufferedOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import uk.ac.wmin.cpc.submission.frontend.helpers.Configuration;
import uk.ac.wmin.cpc.submission.helpers.LogText;

/**
 * This servlet's goal is to provide a created executable to the DCI Bridge
 * when requested.
 * 
 * @author Benoit Meilhac <B.Meilhac@westminster.ac.uk>
 */
@WebServlet(name = "GetFileServlet", urlPatterns = {"/getFile"})
public class GetFileServlet extends HttpServlet {

    private static LogText logger = new LogText("GETFILESERVLET",
            Logger.getLogger("LoggersManager"));
    private static final String STORAGE =
            Configuration.getExecutableStorageLocation();
    private static final String DEFAULT_NAME = Configuration.getExecutableName();

    protected void processRequest(HttpServletRequest req, HttpServletResponse resp)
            throws ServletException, IOException {
        String userID = req.getParameter("userID");
        String folder = req.getParameter("folder");

        if (logger.isDebugEnabled()) {
            logger.log(Level.DEBUG, "Running");
            logger.log(Level.DEBUG, "User  -> " + userID);
            logger.log(Level.DEBUG, "Folder-> " + folder);
        }

        if (userID != null && folder != null) {
            Path file = Paths.get(STORAGE, userID, folder, DEFAULT_NAME);

            if (Files.isRegularFile(file)) {
                sendFile(resp, file);
                logger.log(Level.INFO, "Requested file sent");
            } else {
                resp.setStatus(400);
                logger.log(Level.INFO, "Bad file requested");
            }
        } else {
            resp.setStatus(400);
            logger.log(Level.INFO, "Error detected");
        }

        if (logger.isDebugEnabled()) {
            logger.log(Level.DEBUG, "Ending");
        }
    }

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp)
            throws ServletException, IOException {
        processRequest(req, resp);
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp)
            throws ServletException, IOException {
        processRequest(req, resp);
    }

    @Override
    public String getServletInfo() {
        return "Get files generated by the submission service";
    }

    /**
     * Write the file located to the given path into the HTTP response
     * @param resp HTTP response
     * @param file path to the executable
     * @throws IOException 
     */
    private void sendFile(HttpServletResponse resp, Path file) throws IOException {
        try (BufferedOutputStream bos =
                new BufferedOutputStream(resp.getOutputStream())) {
            resp.setContentType("application/octet-stream");
            resp.setHeader("Content-Disposition", "attachment; filename=\""
                    + DEFAULT_NAME + "\"");
            byte[] fileArray = Files.readAllBytes(file);
            resp.setContentLength(fileArray.length);

            bos.write(fileArray, 0, fileArray.length);
            bos.flush();
        }
    }
}
